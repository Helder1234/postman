{
	"info": {
		"_postman_id": "7894bb25-0553-43ba-8568-8b7c8b1a8a34",
		"name": "Api_1.2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Customers",
			"item": [
				{
					"name": "Customers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ab65a76d-c6c1-4cc0-8ec5-33d5cb34db4a",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e3ab9017-fc19-4667-86fe-4ce33370cf18",
								"exec": [
									"var customerId = pm.variables.get('customer_id')",
									"",
									"pm.test(\"Apresentou costumer Id: \" + customerId, function () {",
									"    pm.expect(pm.response.text()).to.include(customerId);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/customers/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&social_network={{social_network}}\n",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"customers",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "social_network",
									"value": "{{social_network}}\n"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Historicos",
			"item": [
				{
					"name": "Historicos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ab65a76d-c6c1-4cc0-8ec5-33d5cb34db4a",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/historicos/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&customer_id={{customer_id}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"historicos",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "customer_id",
									"value": "{{customer_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Mentions",
			"item": [
				{
					"name": "Mentions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e787c7d8-f0ab-4ded-b016-a76b37788273",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "85568ab2-9f81-4e8c-b5f5-dc6998446511",
								"exec": [
									"var mentionId = pm.variables.get('mention_id')",
									"",
									"pm.test(\"Apresentou o mention Id: \" + mentionId, function () {",
									"    console.log(mentionId)",
									"    pm.expect(pm.response.text()).to.include(mentionId);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/mentions/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&social_network={{social_network}}\n",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"mentions",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "social_network",
									"value": "{{social_network}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mentions Tickets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "fc74d241-d418-4270-8593-c2aff9bf4ea2",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "670db203-f7d6-4edb-b9de-be0571024f54",
								"exec": [
									"var mentionsTicketsId = pm.variables.get('mentionsTickets_id')",
									"",
									"pm.test(\"Apresentou mentions tickets Id: \" + mentionsTicketsId, function () {",
									"    pm.expect(pm.response.text()).to.include(mentionsTicketsId)",
									"})",
									"    "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/mentionsTickets/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"mentionsTickets",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Top5 Menções Num Replicas",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "77eddd21-adb9-40ad-bed1-d44cc1831f04",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c252624f-a8e1-45e3-9e67-771df43d66b9",
								"exec": [
									"var itemId = pm.variables.get('item_id')",
									"",
									"pm.test(\"Apresentou item Id: \" + itemId, function () {",
									"    pm.expect(pm.response.text()).to.include(itemId);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/top5MencoesNumReplicas/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&social_network={{social_network}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"top5MencoesNumReplicas",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "social_network",
									"value": "{{social_network}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tickets",
			"item": [
				{
					"name": "Tickets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "76698da6-7c3e-4a31-abea-fb7470422943",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "da04908f-6a3b-469b-ac0a-73551b3ff0c4",
								"exec": [
									"var ticketsId = pm.variables.get('tickets_id')",
									"",
									"pm.test(\"Apresentou ticket Id: \" + ticketsId, function () {",
									"    pm.expect(pm.response.text()).to.include(ticketsId);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/tickets/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"tickets",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Relacionamento",
			"item": [
				{
					"name": "Relacionamentos Sexo",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2960731c-5af1-487f-8f79-03b62c6c8fa7",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1b3f2205-601e-4328-a0e7-381cf16ed9b0",
								"exec": [
									"var sexo = pm.variables.get('sexo')",
									"var total = pm.variables.get('total_user')",
									"",
									"pm.test(\"Apresentou o valor do campo sexo: \" + sexo, function () {",
									"    pm.expect(pm.response.text()).to.include(sexo);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/relacionamentosSexo/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"relacionamentosSexo",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Relacionamentos Localizacao",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3f34acb2-8c41-4a7b-8aa3-6b3e4282f329",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "81cd1b63-6fa6-4c3d-ba8e-62cff62875a9",
								"exec": [
									"var totalLocal = pm.variables.get('total_local')",
									"",
									"pm.test(\"Apresentou o valor total da localização: \" + totalLocal, function () {",
									"    pm.expect(pm.response.text()).to.include(totalLocal);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/relacionamentosLocalizacao/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"relacionamentosLocalizacao",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Monitorings",
			"item": [
				{
					"name": "List of Monitorings",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "39689735-639a-4a1c-a082-7c616dfc04b5",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"let sha1 = CryptoJS.SHA1('sistema api ' + timesTamp).toString();",
									"",
									"let ass = timesTamp + \":\" + sha1;",
									"",
									"console.log(ass);",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e6cd68a8-a2c1-4699-879f-6f61a83dddb1",
								"exec": [
									"let nameMonitoring = pm.variables.get('nameMonitoring')",
									"",
									"pm.test(\"Apresentou nome do Monitoramento: \" + nameMonitoring, function () {",
									"    pm.expect(pm.response.text()).to.include(nameMonitoring);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/monitorings?time={{timesTamp}}&publickey={{publicKey}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"monitorings"
							],
							"query": [
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Log Monitoring",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e1b3a651-c3bd-4c0c-9ba1-df18daa97a06",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1b763602-f6b6-4010-9aac-3a925ff96921",
								"exec": [
									"let userName = pm.variables.get('userName')",
									"",
									"pm.test(\"Apresentou user name: \" + userName, function () {",
									"    pm.expect(pm.response.text()).to.include(userName);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/logmentions/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"logmentions",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Monitoring Statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b2ba002-5cbe-4cdf-b827-6f7ff16f619d",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "df1a8518-3445-4bed-a4cf-3cec94f3ac6a",
								"exec": [
									"let idSearch = pm.variables.get('idSearch');",
									"",
									"pm.test(\"Apresentou ID Search: \" + idSearch, function () {",
									"    pm.expect(pm.response.text()).to.include(idSearch);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/monitoringstatistics/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&published_date={{published_date}}&ipp={{ipp}}&page={{page}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"monitoringstatistics",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "published_date",
									"value": "{{published_date}}"
								},
								{
									"key": "ipp",
									"value": "{{ipp}}"
								},
								{
									"key": "page",
									"value": "{{page}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5cbf9ccb-9444-4bc3-818c-dc72afb9ed05",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1018d6c6-237d-4f64-8300-ca6e9026f675",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Searches",
			"item": [
				{
					"name": "List of Searches",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "bfb1c2df-3f89-4644-804b-77c4d22ff550",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "41d118f1-e4e5-4f78-bd00-f5e63d0a47a5",
								"exec": [
									"let idSearch = pm.variables.get('idSearch')",
									"",
									"pm.test(\"Apresentou ID da Busca: \" + idSearch, function () {",
									"    pm.expect(pm.response.text()).to.include(idSearch);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/searches/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"searches",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "List of Tags",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "97369e9d-38c1-4f9c-b671-78ce04a6b679",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let type = pm.variables.get('type');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39093369-fa5c-45bf-9aa2-3bb38acb6bf0",
								"exec": [
									"var idTag = pm.variables.get('idTag')",
									"",
									"pm.test(\"Apresentou ID da Tag: \" + idTag, function () {",
									"    pm.expect(pm.response.text()).to.include(idTag);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/tags/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&type={{type}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"tags",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "type",
									"value": "{{type}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Tag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8bcba94d-2528-4bb2-8591-db163ceab5bf",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "417a5c47-920d-4bcf-9dcf-969a5d6e168e",
								"exec": [
									"let tagToAdd = pm.variables.get('tagToAdd')",
									"",
									"pm.test(\"Apresentou a Tag: \" + tagToAdd, function () {",
									"    pm.expect(pm.response.text()).to.include(tagToAdd);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/tagmentions/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions_ids={{idMention}}&tags_to_add={{tagToAdd}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"tagmentions",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions_ids",
									"value": "{{idMention}}"
								},
								{
									"key": "tags_to_add",
									"value": "{{tagToAdd}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Tag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "efa5ad73-dffc-43d4-beb0-de3b71d8def8",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "3d7b1936-9cf7-430e-96a7-fdfdb8ddade5",
								"exec": [
									"let tagToRemove = pm.variables.get('tagToAdd')",
									"",
									"pm.test(\"Apresentou a Tag: \" + tagToRemove, function () {",
									"    pm.expect(pm.response.text()).to.include(tagToRemove);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/tagmentions/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions_ids={{idMention}}&tags_to_remove={{tagToRemove}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"tagmentions",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions_ids",
									"value": "{{idMention}}"
								},
								{
									"key": "tags_to_remove",
									"value": "{{tagToRemove}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Classify Sentiment of Mentions",
			"item": [
				{
					"name": "Sentiment Positive",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7525d3da-6ae7-442a-9156-2defbec4b60e",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "676e90c3-27ca-4964-aa2b-8cf2e05e5281",
								"exec": [
									"var data = pm.variables.get('data')",
									"",
									"pm.test(\"Apresentou valor Data: \" + data, function () {",
									"    pm.expect(pm.response.text()).to.include(data);",
									"});",
									"",
									"pm.test(\"Apresentou true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/sentiment/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions={{idMentionSentiment}}&sentiment={{sentimentPositive}}\n",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"sentiment",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions",
									"value": "{{idMentionSentiment}}"
								},
								{
									"key": "sentiment",
									"value": "{{sentimentPositive}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sentiment Remove",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5f762456-dae9-4ab8-9c9e-a06148de1d64",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bb621d2e-977d-483f-95cd-491d0c4b6951",
								"exec": [
									"var data = pm.variables.get('data')",
									"",
									"pm.test(\"Apresentou valor Data: \" + data, function () {",
									"    pm.expect(pm.response.text()).to.include(data);",
									"});",
									"",
									"pm.test(\"Apresentou true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/sentiment/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions={{idMentionSentiment}}&sentiment={{sentimentRemove}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"sentiment",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions",
									"value": "{{idMentionSentiment}}"
								},
								{
									"key": "sentiment",
									"value": "{{sentimentRemove}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sentiment Negative",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aeb24cac-44de-405d-9635-6a837c4809b5",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "cf579f37-aed1-4e3b-8d6c-a614c297dc98",
								"exec": [
									"var data = pm.variables.get('data')",
									"",
									"pm.test(\"Apresentou valor Data: \" + data, function () {",
									"    pm.expect(pm.response.text()).to.include(data);",
									"});",
									"",
									"pm.test(\"Apresentou true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/sentiment/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions={{idMentionSentiment}}&sentiment={{sentimentNegative}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"sentiment",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions",
									"value": "{{idMentionSentiment}}"
								},
								{
									"key": "sentiment",
									"value": "{{sentimentNegative}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sentiment Neutrol",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "66b53a71-76cf-4e7b-a39f-cb07f4499f0b",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "39e6aedb-6b0e-474d-b9d9-2b3fcc0dea1a",
								"exec": [
									"var data = pm.variables.get('data')",
									"",
									"pm.test(\"Apresentou valor Data: \" + data, function () {",
									"    pm.expect(pm.response.text()).to.include(data);",
									"});",
									"",
									"pm.test(\"Apresentou true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/sentiment/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions={{idMentionSentiment}}&sentiment={{sentimentNeutral}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"sentiment",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions",
									"value": "{{idMentionSentiment}}"
								},
								{
									"key": "sentiment",
									"value": "{{sentimentNeutral}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sentiment Mixed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8d6ca376-1784-41a7-942e-fc730863af06",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "57dc768f-945a-4e68-b7e4-4253c3aba472",
								"exec": [
									"var data = pm.variables.get('data')",
									"",
									"pm.test(\"Apresentou valor Data: \" + data, function () {",
									"    pm.expect(pm.response.text()).to.include(data);",
									"});",
									"",
									"pm.test(\"Apresentou true\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/sentiment/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mentions={{idMentionSentiment}}&sentiment={{sentimentMixed}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"sentiment",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mentions",
									"value": "{{idMentionSentiment}}"
								},
								{
									"key": "sentiment",
									"value": "{{sentimentMixed}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cda811e2-29e7-4d3d-866e-2285de2334d5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ad4dd458-b875-4f1d-b887-c8773ab586f2",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Tickets",
			"item": [
				{
					"name": "List of  Tickets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a51c3682-3081-46e9-be50-d0edaa1598f3",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "aeceefe4-cca7-48c5-a16f-e8b213521697",
								"exec": [
									"var idTicket = pm.variables.get('idTicket')",
									"var status = pm.variables.get('status')",
									"",
									"pm.test(\"Apresentou ID do Ticket: \" + idTicket, function () {",
									"    pm.expect(pm.response.text()).to.include(idTicket);",
									"});",
									"",
									"pm.test(\"Apresentou status: \" + status, function () {",
									"    pm.expect(pm.response.text()).to.include(status);",
									"});",
									"",
									"console.log(idTicket)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/tickets/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"tickets",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Log of Tickets",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "12a273b4-e389-48c5-8243-3ba30953ad75",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bd0110d6-7bbb-42c0-b9a2-593767365718",
								"exec": [
									"var idTicket = pm.variables.get('idTicket')",
									"",
									"pm.test(\"Apresentou ID do Ticket: \" + idTicket, function () {",
									"    pm.expect(pm.response.text()).to.include(idTicket);",
									"});",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.1/logtickets/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.1",
								"logtickets",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "List of Users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f927f5c0-75fa-422a-8070-663b52a61009",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a27d5e9f-d5ee-49ed-92f2-5758fa3165ed",
								"exec": [
									"var numberMentions = pm.variables.get('numberMentions')",
									"",
									"pm.test(\"Apresentou Numero de Mencões: \" + numberMentions, function () {",
									"    pm.expect(pm.response.text()).to.include(numberMentions);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/users/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&social_network={{socialNetWork}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"users",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "social_network",
									"value": "{{socialNetWork}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "Post Facebook",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2828f7b4-4330-4df9-a9f8-f95d0d938237",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"function randomText () {",
									"    var letters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';",
									"    var random = '';",
									"",
									"    for (var i = 0; i < letters.length; i++) {",
									"      var rnum = Math.floor(Math.random() * letters.length);",
									"      random += letters.substring(rnum, rnum + 1);",
									"    }",
									"    return random;",
									"}",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									"pm.environment.set('randomText', randomText());",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9529e9b1-5502-4c36-964b-0ab0c16148d8",
								"exec": [
									"pm.test(\"Deve Apresentar True\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/post/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&account_id={{idAccount}}&message={{randomText}}&shared_url={{shared_url}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"post",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "account_id",
									"value": "{{idAccount}}"
								},
								{
									"key": "message",
									"value": "{{randomText}}"
								},
								{
									"key": "shared_url",
									"value": "{{shared_url}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Post Twitter",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c8a4955c-dcbd-4ce5-893c-721812bed11f",
								"exec": [
									"// Para o teste dessa request funcionar o ambiente de QA terá que estar adicionando conta do Twitter, deverá somente inserir a variavel ID account twitter no ambiente de QA.",
									"// Criar o script de teste, devido QA não está funcionando vou aguardar para criar o Teste para QA e Prod.",
									"",
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"function randomText () {",
									"    var letters = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';",
									"    var random = '';",
									"",
									"    for (var i = 0; i < letters.length; i++) {",
									"      var rnum = Math.floor(Math.random() * letters.length);",
									"      random += letters.substring(rnum, rnum + 1);",
									"    }",
									"    return random;",
									"}",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									"pm.environment.set('randomText', randomText());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/post/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&account_id={{idAccountTwitter}}&message={{randomText}}&shared_url={{shared_url}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"post",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "account_id",
									"value": "{{idAccountTwitter}}"
								},
								{
									"key": "message",
									"value": "{{randomText}}"
								},
								{
									"key": "shared_url",
									"value": "{{shared_url}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "93ef3969-cf73-47bf-929c-f245f4203c31",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "658e350c-1c10-4616-a072-975d057d1a41",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Mentions",
			"item": [
				{
					"name": "List of Mentions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "74b85fc4-a00c-40b1-be1b-df7c518e1d13",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "00a74731-8da9-4315-838d-6f8cade12799",
								"exec": [
									"let facebookName = pm.variables.get('facebookName');",
									"",
									"pm.test(\"Apresentou o Facebook Name: \" + facebookName, function () {",
									"    pm.expect(pm.response.text()).to.include(facebookName);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/mentions/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&searches_id={{idSearch}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"mentions",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "searches_id",
									"value": "{{idSearch}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List of Replies Mention",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51f2b277-4d17-47f3-831a-08af7c9e48f8",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "663a5c6e-10c5-4fbb-838a-fbc715ea8e49",
								"exec": [
									"let idReplay = pm.variables.get('idReplay');",
									"",
									"pm.test(\"Apresentou ID Replay: \" + idReplay, function () {",
									"    pm.expect(pm.response.text()).to.include(idReplay);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url_base}}/1.2/mentionreplies/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mention_id={{idMention}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"mentionreplies",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mention_id",
									"value": "{{idMention}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Replay of Mention",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9ead58b1-a418-47e3-99d8-c8f43f9fa4b7",
								"exec": [
									"var CryptoJS = require('crypto-js');",
									"",
									"let privateKey = pm.variables.get('privateKey');",
									"let timesTamp = new Date().getTime();",
									"",
									"let signature = CryptoJS.MD5(timesTamp + privateKey).toString();",
									"",
									"pm.environment.set('timesTamp', timesTamp);",
									"pm.environment.set('signature', signature);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d7ef0d84-1b2c-4dde-b909-3584cc4a5441",
								"exec": [
									"pm.test(\"Deve Apresentar True\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"true\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{url_base}}/1.2/replymention/{{idMonitoring}}/?publickey={{publicKey}}&time={{timesTamp}}&signature={{signature}}&mention={{idMentionReplay}}&message={{randomText}}&account={{account}}",
							"host": [
								"{{url_base}}"
							],
							"path": [
								"1.2",
								"replymention",
								"{{idMonitoring}}",
								""
							],
							"query": [
								{
									"key": "publickey",
									"value": "{{publicKey}}"
								},
								{
									"key": "time",
									"value": "{{timesTamp}}"
								},
								{
									"key": "signature",
									"value": "{{signature}}"
								},
								{
									"key": "mention",
									"value": "{{idMentionReplay}}"
								},
								{
									"key": "message",
									"value": "{{randomText}}"
								},
								{
									"key": "account",
									"value": "{{account}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}